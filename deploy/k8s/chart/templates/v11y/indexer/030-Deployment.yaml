{{ if .Values.v11y.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v11y-indexer
  labels:
    app.kubernetes.io/name: v11y-indexer
    app.kubernetes.io/component: indexer
    app.kubernetes.io/part-of: trustification
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: v11y-indexer
      app.kubernetes.io/component: indexer
      app.kubernetes.io/part-of: trustification
  template:
    metadata:
      labels:
        app.kubernetes.io/name: v11y-indexer
        app.kubernetes.io/component: indexer
        app.kubernetes.io/part-of: trustification
        metrics: "true"
    spec:
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - image: {{ .Values.trustImage }}:{{ .Values.release }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: service
          command: ["/trust"]
          args:
            - "v11y"
            - "indexer"
            - "--event-bus"
            - "sqs"
            - "--stored-topic"
            - "{{ .Values.v11y.indexer.topics.stored }}"
            - "--indexed-topic"
            - "{{ .Values.v11y.indexer.topics.indexed }}"
            - "--failed-topic"
            - "{{ .Values.v11y.indexer.topics.failed }}"
            - "--index-mode"
            - "{{ .Values.v11y.indexMode }}"
            - "--index-dir"
            - "/data/index"
{{ if .Values.v11y.indexer.reindex }}
            - "--reindex"
            - "always"
{{ end }}
          env:
            - name: RUST_LOG
              value: {{ default "info" .Values.v11y.indexer.logLevel }}
            - name: STORAGE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.v11y.credentials }}"
                  key: aws_access_key_id
            - name: STORAGE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.v11y.credentials }}"
                  key: aws_secret_access_key
            - name: STORAGE_REGION
              value: "{{ .Values.region }}"
            - name: STORAGE_BUCKET
              value: "{{ .Values.v11y.bucket }}"
            - name: SQS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.v11y.credentials }}"
                  key: aws_access_key_id
            - name: SQS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.v11y.credentials }}"
                  key: aws_secret_access_key
            - name: SQS_REGION
              value: "{{ .Values.region }}"
            - name: INFRASTRUCTURE_ENABLED
              value: "true"
            - name: INFRASTRUCTURE_BIND
              value: "[::]:9010"
            - name: INDEX_SYNC_INTERVAL
              value: {{ .Values.v11y.indexer.indexSyncInterval | default "1800s" }}
          volumeMounts:
            - name: data
              mountPath: /data
          ports:
            - containerPort: 9010
              protocol: TCP
              name: infra
          resources:
            {{- toYaml .Values.v11y.indexer.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9010
            initialDelaySeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9010
            initialDelaySeconds: 2
          startupProbe:
            httpGet:
              path: /health/startup
              port: 9010
{{ end }}
