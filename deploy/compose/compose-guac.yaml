version: "3"

services:
  # Neo4j is turned down for now since we are currently only using the in memory backend
  # neo4j:
  #   image: "neo4j:4.4.9-community"
  #   environment:
  #     NEO4J_AUTH: "neo4j/s3cr3t"
  #     NEO4J_apoc_export_file_enabled: true
  #     NEO4J_apoc_import_file_enabled: true
  #     NEO4J_apoc_import_file_use__neo4j__config: true
  #     NEO4JLABS_PLUGINS: '["apoc"]'
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   restart: on-failure
  guac-collectsub:
    image: $GUAC_IMAGE
    command: "/opt/guac/guaccsub --csub-listen-port $GUAC_CSUB_PORT"
    working_dir: /guac
    restart: on-failure
    expose:
      - "$GUAC_CSUB_PORT"
    ports:
      - "$GUAC_CSUB_PORT:$GUAC_CSUB_PORT"
    volumes:
      - ./container_files/guac:/guac${SELINUX_VOLUME_OPTIONS}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:$GUAC_CSUB_PORT"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  guac-graphql:
    image: $GUAC_IMAGE
    command: "/opt/guac/guacgql --gql-listen-port $GUAC_API_PORT"
    working_dir: /guac
    restart: on-failure
    expose:
      - "$GUAC_API_PORT"
    ports:
      - "$GUAC_API_PORT:$GUAC_API_PORT"
    volumes:
      - ./container_files/guac:/guac${SELINUX_VOLUME_OPTIONS}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:$GUAC_API_PORT"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  bombastic-collector:
    image: $GUAC_IMAGE
    command: "/opt/guac/guacone collect s3 --poll --s3-mp kafka --s3-url http://minio:9000 --s3-bucket bombastic --s3-queues sbom-indexed --s3-mp-endpoint kafka:9094 --gql-addr http://guac-graphql:$GUAC_API_PORT/query --csub-addr guac-collectsub:$GUAC_CSUB_PORT"
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: eu-west-1
