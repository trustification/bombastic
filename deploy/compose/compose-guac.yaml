version: "3"

services:
  # Neo4j is turned down for now since we are currently only using the in memory backend
  # neo4j:
  #   image: "neo4j:4.4.9-community"
  #   environment:
  #     NEO4J_AUTH: "neo4j/s3cr3t"
  #     NEO4J_apoc_export_file_enabled: true
  #     NEO4J_apoc_import_file_enabled: true
  #     NEO4J_apoc_import_file_use__neo4j__config: true
  #     NEO4JLABS_PLUGINS: '["apoc"]'
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   restart: on-failure

  nats:
    image: "docker.io/library/nats:2.9.17-alpine"
    command: "--config /config/nats/js.conf -m 8222"
    ports:
      - "4222:4222"
      # monitoring port
      - "8222:8222"
    volumes:
      - ./container_files/nats:/config/nats${SELINUX_VOLUME_OPTIONS}
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  guac-collectsub:
    image: $GUAC_IMAGE
    command: "/opt/guac/guaccsub --csub-listen-port $GUAC_CSUB_PORT"
    working_dir: /guac
    restart: on-failure
    expose:
      - "$GUAC_CSUB_PORT"
    ports:
      - "$GUAC_CSUB_PORT:$GUAC_CSUB_PORT"
    depends_on:
      nats:
        condition: service_healthy
    volumes:
      - ./container_files/guac:/guac${SELINUX_VOLUME_OPTIONS}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:$GUAC_CSUB_PORT"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  guac-graphql:
    image: $GUAC_IMAGE
    command: "/opt/guac/guacgql --gql-listen-port $GUAC_API_PORT"
    working_dir: /guac
    restart: on-failure
    depends_on:
      nats:
        condition: service_healthy
    expose:
      - "$GUAC_API_PORT"
    ports:
      - "$GUAC_API_PORT:$GUAC_API_PORT"
    volumes:
      - ./container_files/guac:/guac${SELINUX_VOLUME_OPTIONS}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:$GUAC_API_PORT"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  guac-ingestor:
    image: $GUAC_IMAGE
    command: "/opt/guac/guacingest --async-ingest=false --gql-addr http://guac-graphql:$GUAC_API_PORT/query --csub-addr guac-collectsub:$GUAC_CSUB_PORT"
    working_dir: /guac
    restart: on-failure
    depends_on:
      guac-collectsub:
        condition: service_healthy
      guac-graphql:
        condition: service_healthy
    volumes:
      - ./container_files/guac:/guac${SELINUX_VOLUME_OPTIONS}

  bombastic-exporter:
    image: $TRUST_IMAGE:${TRUST_VERSION:?TRUST_VERSION is required}
    command: exporter --devmode --document-type sbom --kafka-bootstrap-servers kafka:9094 --guac-url nats:4222
    environment:
     STORAGE_ENDPOINT: http://minio:9000

  vexination-exporter:
    image: $TRUST_IMAGE:${TRUST_VERSION:?TRUST_VERSION is required}
    command: exporter --devmode --document-type vex --kafka-bootstrap-servers kafka:9094 --guac-url nats:4222
    environment:
     STORAGE_ENDPOINT: http://minio:9000