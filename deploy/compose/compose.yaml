version: '3'
services:
  minio:
    image: quay.io/minio/minio:RELEASE.2023-06-19T19-52-50Z
    command: server --console-address ":9001" /data1
    depends_on:
      kafka:
        condition: service_healthy
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
      MINIO_NOTIFY_KAFKA_ENABLE_BOMBASTIC: "on"
      MINIO_NOTIFY_KAFKA_BROKERS_BOMBASTIC: "kafka:9094"
      MINIO_NOTIFY_KAFKA_TOPIC_BOMBASTIC: "sbom-stored"
      MINIO_NOTIFY_KAFKA_ENABLE_VEXINATION: "on"
      MINIO_NOTIFY_KAFKA_BROKERS_VEXINATION: "kafka:9094"
      MINIO_NOTIFY_KAFKA_TOPIC_VEXINATION: "vex-stored"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 10

  createbuckets:
    image: quay.io/minio/mc:RELEASE.2023-06-19T19-31-19Z
    depends_on:
      minio:
        condition: service_healthy
      kafka:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 admin password;
      /usr/bin/mc mb myminio/bombastic || true;
      /usr/bin/mc policy download myminio/bombastic;
      /usr/bin/mc event add myminio/bombastic arn:minio:sqs::BOMBASTIC:kafka --event "put,delete";

      /usr/bin/mc mb myminio/vexination || true;
      /usr/bin/mc policy download myminio/vexination;
      /usr/bin/mc event add myminio/vexination arn:minio:sqs::VEXINATION:kafka --event put;
      /usr/bin/mc admin service restart myminio;"

  kafka:
    image: docker.io/bitnami/kafka:3.4
    expose:
      - "9092"
    ports:
      - "9092:9092"
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9094,EXTERNAL://localhost:9092
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9094 --list"]
      interval: 30s
      timeout: 20s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    command: start-dev
    environment:
      - KEYCLOAK_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123456
    ports:
      - "8090:8080"
    expose:
      - "8080"
    # FIXME: unable to define a health check: https://github.com/keycloak/keycloak/issues/21941
    #healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5

  init-keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    depends_on:
      - keycloak
      # keycloak:
      # FIXME: broken in podman: https://github.com/containers/podman-compose/issues/575
      # FIXME: even it that works, keycloak has issues too: https://github.com/keycloak/keycloak/issues/21941
      #   condition: service_healthy
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KCADM_PATH=/opt/keycloak/bin/kcadm.sh
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123456
      - REALM=chicken
      - INIT_DATA=/init-sso/data
      - CHICKEN_ADMIN=admin
      - CHICKEN_ADMIN_PASSWORD=admin123456
    volumes:
      - ./container_files/init-sso:/init-sso:z
    entrypoint: /usr/bin/bash
    command: /init-sso/init.sh
