name: Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-22.04
    env:
      COMPOSE_FILES: "compose.yaml compose-guac.yaml"
    steps:
      - name: Init compose file list
        run: |
          files=($COMPOSE_FILES)
          echo "files=${files[@]/#/ -f deploy/compose/}" > "$GITHUB_ENV"

      - name: Maximize build space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo rm -Rf ${JAVA_HOME_8_X64}
          sudo rm -Rf ${JAVA_HOME_11_X64}
          sudo rm -Rf ${JAVA_HOME_17_X64}
          sudo rm -Rf ${RUBY_PATH}
          df -h

      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            spog/ui/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y libsasl2-dev

      - name: Install cargo binstall
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install trunk
        run: cargo binstall -y trunk

      - name: Install wasm32-unknown-unknown
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Compose
        run: |
          docker compose ${files} up -d

      - name: Print storage use
        run: |
          sudo du -sh *
          sudo du -sh $HOME/*
          sudo rm -rf deploy/compose/container_files/pg

      - name: Test
        run: |
          #RUST_LOG=tantivy=off,info cargo xtask test --ui --webdriver none --nocapture
          RUST_LOG=tantivy=off,info cargo xtask test --testset integ --nocoverage --nocapture --concurrent=1
          docker compose ${files} ps

      - name: Print logs
        if: always()
        run: |
          docker ps -a
          docker compose ${files} logs
          docker compose ${files} down
