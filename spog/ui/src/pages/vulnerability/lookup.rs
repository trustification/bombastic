use crate::pages::AppRoute;
use patternfly_yew::prelude::*;
use yew::prelude::*;
use yew_nested_router::prelude::*;

#[function_component(LookupVulnerabilityModal)]
pub fn lookup_vulnerability_modal() -> Html {
    use patternfly_yew::next::TextInput;

    let form_state = use_state_eq(InputState::default);

    let onvalidated_form = {
        let form_state = form_state.clone();
        Callback::from(move |state| form_state.set(state))
    };

    let validator_cve = |ctx: ValidationContext<String>| {
        if ctx.value.is_empty() {
            return ValidationResult::error("Must not be empty");
        }

        ValidationResult::ok()
    };

    let cve = use_state_eq(|| "CVE-2023-0286".to_string());

    let router = use_router::<AppRoute>();
    let backdrop = use_backdrop();
    let onclick = {
        let cve = cve.clone();
        let backdrop = backdrop.clone();
        Callback::from(move |_| {
            if let Some(backdrop) = &backdrop {
                backdrop.close();
            }
            if let Some(router) = &router {
                router.push(AppRoute::Vulnerability { cve: (*cve).clone() })
            }
        })
    };

    let footer = html!(
        <Button
            variant={ButtonVariant::Primary}
            disabled={(*form_state) == InputState::Error}
            r#type={ButtonType::Submit}
            {onclick}
            form="lookup-form"
        >
            {"Lookup"}
        </Button>
    );

    html!(
        <Bullseye plain=true>
            <Modal
                title="Lookup Vulnerability"
                variant={ModalVariant::Small}
                {footer}
            >
                <Form
                    id="lookup-form"
                    method="dialog"
                    onvalidated={onvalidated_form}
                >
                    <FormGroupValidated<TextInput>
                        label="Vulnerability ID (CVE)"
                        required=true
                        validator={Validator::from(validator_cve)}
                    >
                        <TextInput value={( * cve).clone()} oninput ={Callback::from( move | data | cve.set(data))} />
                    </FormGroupValidated<TextInput>>
                </Form>
            </Modal>
        </Bullseye>
    )
}
